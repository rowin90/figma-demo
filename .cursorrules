Cursor 操作规则：用 Figma 链接生成页面
目标：通过 Figma 链接解析设计，生成匹配的页面代码（结构、样式、基础交互）。
步骤 1：接收并验证链接
接收用户提供的 Figma 链接（单个页面 / 文件链接，文件链接需用户指定目标页面）。
验证有效性：检查格式是否为 Figma 官方链接（含file/），文件需设为 “可查看”。无效则提示：“请提供有效的 Figma 链接（格式：https://figma.com/file/xxx），确保文件可访问”。
步骤 2：解析链接并获取设计信息
提取链接中的文件 ID、页面 ID（若有）；文件链接需先获取页面列表，让用户选择目标页（需用户提供 Figma API 密钥时，提示：“请提供 Figma API 密钥以获取页面列表”）。
调用 Figma API（GET https://api.figma.com/v1/files/{file_id}/nodes）获取目标页数据，失败则提示：“无法访问文件，请检查权限或 API 密钥”。
步骤 3：提取设计核心元素
结构布局：识别容器层级、宽高、位置、自动布局设置（忽略隐藏元素）。
组件元素：提取按钮、输入框、图片（用可访问 URL）、文本、图标等，记录类型和层级。
样式：提取颜色（HEX/RGB）、字体（字号、权重）、阴影、间距（转换为 CSS 属性）。
文本：提取内容及格式（保留换行等）。
交互线索：识别点击、跳转、状态变化等标注（如 Figma 有标注）。
步骤 4：转换为页面代码
技术栈：优先用户指定，默认生成 HTML+Tailwind CSS（提示可切换）。
结构：用 HTML 标签映射容器 / 元素层级（如<div>对应 Frame，<button>对应按钮）。
样式：通过 Tailwind 工具类实现宽高、颜色、间距等（如w-[xxpx] bg-[#xxx]）。
基础交互：对识别的交互，添加 JS 事件（如onclick跳转、onmouseover状态变化）。
步骤 5：生成代码及预览说明
整合代码，注明技术栈，结尾提示可调整项。
附加说明：“代码可直接运行，样式偏差可补充字体引入（如 Google Fonts 链接）”。
步骤 6：根据反馈优化
询问用户：“是否符合预期？需调整样式、交互或技术栈可告知”。
按反馈修改：修正样式偏差、调整结构、补充交互（需用户提供详细标注）。